name: Terraform Deploy with OIDC, Validation & Manual Approval

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [dev, qa, uat, prod]

    permissions:
      id-token: write
      contents: read

    environment: ${{ matrix.env }} # GitHub environment protections will handle manual approvals for UAT/PROD

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Terraform providers
        uses: actions/cache@v3
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::593002333172:role/BE_Github_Actions
          aws-region: ap-south-1

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="key=terraform/${{ matrix.env }}/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          if [ -f "environments/${{ matrix.env }}.tfvars" ]; then
            terraform plan -var-file="environments/${{ matrix.env }}.tfvars" -out=tfplan
          else
            echo "No tfvars file for ${{ matrix.env }}, skipping plan..."
          fi

      - name: Upload tfplan artifact
        if: ${{ matrix.env != 'uat' && matrix.env != 'prod' || success() }}
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: tfplan
        continue-on-error: true

      - name: Terraform Apply
        if: ${{ matrix.env != 'uat' && matrix.env != 'prod' || success() }}
        run: |
          if [ -f "tfplan" ]; then
            terraform apply -auto-approve tfplan
          else
            echo "No plan file found, skipping apply for ${{ matrix.env }}"
          fi
